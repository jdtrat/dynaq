% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transitions.R
\name{getFirstTransition}
\alias{getFirstTransition}
\title{Get Transition from First to Second State}
\usage{
getFirstTransition(
  state,
  action,
  sim = FALSE,
  tFunction = NULL,
  transDF = NULL
)
}
\arguments{
\item{state}{The first state.}

\item{action}{The action chosen in the first state.}

\item{sim}{Logical: TRUE if simulating experience; FALSE if not simulating
experience.}

\item{tFunction}{Transition function that has the current probability of
transitioning to States "A" or "B".}

\item{transDF}{Transition data from real experience as defined in
\code{simModel}}
}
\value{
Next state.
}
\description{
\code{getFirstTransition} takes in a state (though unnecessary, as the task
structure dictates it will always be State "FC") and an action and returns
the next state based off them. If this is being called for actual experience,
that is all it does. simulated experience, is more complicated and described
below.
}
\details{
If simulated experience, the function requires a transition function and
transition data from real experience. Using these, it determines the next
state based on the supplied transition function, \code{tFunction}, and prior
experience, \code{transDF}.

If this is the first round, as indicated by an empty \code{trans$Table} global
variable (which tracks the prior state-action-reward information), then the
transition is chosen based off whatever was previously experienced during the
actual trial. It does this by calling the \code{randomPrevious}
function, passing in "State2", and observing what was really experienced.

This is to say that an individual cannot experience a state in a simulation
that they have not previously visited. Similarly, if this is not the first
simulated experience, the function checks for which states have been visited
previously. If, for example, the action is right, and the agent has only
experienced State "RB," then they will only transition to that state in this
simulation. However, if they've experienced both States RA and RB, they could
transition to either based on the supplied transition \code{tFunction} (i.e.
the agent's model of the task structure).
}
